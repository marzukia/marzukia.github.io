<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Andryo Marzuki</title>
    <link>https://marzukia.github.io/tags/c#/</link>
    <description>Recent content in C# on Andryo Marzuki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Â© 2020, Andryo Marzuki</copyright>
    <lastBuildDate>Thu, 18 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://marzukia.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mocking DbContext in ASP.NET Core for xUnit Tests</title>
      <link>https://marzukia.github.io/post/mocking-dbcontext-tests-aspnet/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marzukia.github.io/post/mocking-dbcontext-tests-aspnet/</guid>
      <description>Are you Mocking me? Having unit tests in your application is important to ensure that your application functions how you intend for it to function. This is especially important as the scope and complexity of your application increases in size.
My starting point was this MSDN article discussing how to use xUnit with ASP.NET Core. The example itself is quite bare in my opinion, it doesn&amp;rsquo;t actually provide any real useful examples on how to implement xUnit with your application&amp;rsquo;s DbContext.</description>
    </item>
    
    <item>
      <title>ASP.NET Core Web API JWT Implementation</title>
      <link>https://marzukia.github.io/post/aspnet-jwt-webapi/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marzukia.github.io/post/aspnet-jwt-webapi/</guid>
      <description>Can I See Some Identification? I&amp;rsquo;ve recently made the jump from using Django to ASP.NET Core as my primary choice when developing web applications. This was initially due to me branching into using C# for things like Unity, and later realizing how much better ASP.NET Core is than Django.
As I mostly use ReactJS for my application frontends, I did not need the &amp;lsquo;Razor&amp;rsquo; pages integrated in ASP.NET. As a result, my preference was to bootstrap my projects as webapi rather than webapp or even mvc.</description>
    </item>
    
  </channel>
</rss>